SCRAPER TODO: 

- SCRAPING SHOULD REFRESH THE PRICES OF THE STOCKS -- done

- SCRAPER SHOULD RUN HEADLESS -- done

- LOADING ANIMATION SHOULD SHOW WHILE SCRAPER IS RUNNING -- done

- USER DATABASE MUST HAVE: 
	- EMAIL
	- PASSWORD
	- NAME
	- STOCK PORTFOLIO (LIST)


---- STOCK PAGE TABLE ----

 SYMBOL		LAST PRICE		CHANGE		% CHANGE	 VOLUME		MARKET CAP -- done
 
  ---          $--           $--          %---         ---            $---

														PORTFOLIO NET VALUE
																	----
--------------------------

SqlCommand checkIfStockExists = new SqlCommand("SELECT COUNT(*) FROM Stock WHERE (Symbol = " + stock.Symbol + ")", conn); // needs connection string as second part of SqlCommand
            int stockExists = (int)checkIfStockExists.ExecuteScalar(); // Returns the first instance of a match
            if (stockExists > 0) // If stock exists, update Price, Change, % Change, Volume, and Market Cap
            {
                SqlCommand("UPDATE Stock 
							SET Price = " + stock.Price + ", 
							Change = " + stock.Change + ", 
							PChange = " + stock.PChange + ", 
							Volume = " + stock.Volume + ", 
							MarketCap = " + stock.MarketCap + " 
							" WHERE (Symbol = " + stock.Symbol + ")", conn);
            }
            else // If not, add new stock to database
            {
                db.Stocks.Add(stock); 
                db.SaveChanges();
            }



			------

			SqlCommand checkIfStockExists = new SqlCommand("SELECT COUNT(*) FROM Stock WHERE (Symbol = " + stock.Symbol + ")", conn); // needs connection string as second part of SqlCommand
                int stockExists = (int)checkIfStockExists.ExecuteScalar(); // Returns the first instance of a match
                if (stockExists > 0) // If stock exists, update Price, Change, % Change, Volume, and Market Cap
                {
                    SqlCommand updateStocks = new SqlCommand("UPDATE Stock SET Price = " + stock.Price + ", Change = " + stock.Change + ", PChange = " + stock.PChange + ", Volume = " + stock.Volume + ", MarketCap = " + stock.MarketCap + " WHERE (Symbol = " + stock.Symbol + ")", conn);
                    updateStocks.ExecuteNonQuery();
                }
                else // If not, add new stock to database
                {
                    db.Stocks.Add(stock);
                }